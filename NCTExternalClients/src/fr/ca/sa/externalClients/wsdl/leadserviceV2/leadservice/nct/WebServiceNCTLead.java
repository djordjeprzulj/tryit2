
package fr.ca.sa.externalClients.wsdl.leadserviceV2.leadservice.nct;



import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import fr.ca.sa.nct.commons.NCTSystemConstants;


/**
 * BizTalk assembly "NCTLead, Version=1.0.0.0, Culture=neutral, PublicKeyToken=534e0e2d30f2046e" published web service.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WebService_NCTLead", targetNamespace = "http://NCT.leadservice", wsdlLocation = "https://biztalktest.creditagricole.rs/NCTLead_Proxy/WebService_NCTLead.asmx?WSDL")
public class WebServiceNCTLead
    extends Service
{

    private static final URL WEBSERVICENCTLEAD_WSDL_LOCATION;
    private static final WebServiceException WEBSERVICENCTLEAD_EXCEPTION;
    private static final QName WEBSERVICENCTLEAD_QNAME = new QName("http://NCT.leadservice", "WebService_NCTLead");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(NCTSystemConstants.getWsdlAddressLead());
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WEBSERVICENCTLEAD_WSDL_LOCATION = url;
        WEBSERVICENCTLEAD_EXCEPTION = e;
    }

    public WebServiceNCTLead() {
        super(__getWsdlLocation(), WEBSERVICENCTLEAD_QNAME);
    }

    public WebServiceNCTLead(WebServiceFeature... features) {
        super(__getWsdlLocation(), WEBSERVICENCTLEAD_QNAME, features);
    }

    public WebServiceNCTLead(URL wsdlLocation) {
        super(wsdlLocation, WEBSERVICENCTLEAD_QNAME);
    }

    public WebServiceNCTLead(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WEBSERVICENCTLEAD_QNAME, features);
    }

    public WebServiceNCTLead(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebServiceNCTLead(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WebServiceNCTLeadSoap
     */
    @WebEndpoint(name = "WebService_NCTLeadSoap")
    public WebServiceNCTLeadSoap getWebServiceNCTLeadSoap() {
        return super.getPort(new QName("http://NCT.leadservice", "WebService_NCTLeadSoap"), WebServiceNCTLeadSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebServiceNCTLeadSoap
     */
    @WebEndpoint(name = "WebService_NCTLeadSoap")
    public WebServiceNCTLeadSoap getWebServiceNCTLeadSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://NCT.leadservice", "WebService_NCTLeadSoap"), WebServiceNCTLeadSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEBSERVICENCTLEAD_EXCEPTION!= null) {
            throw WEBSERVICENCTLEAD_EXCEPTION;
        }
        return WEBSERVICENCTLEAD_WSDL_LOCATION;
    }

}
